<?php


namespace frontend\controllers;


use backend\models\Article;
use backend\models\ArticleCategory;
use backend\models\Goods;
use backend\models\GoodsCategory;
use frontend\models\Address;
use frontend\models\Cart;
use frontend\models\EditPassword;
use frontend\models\LoginForm;
use frontend\models\Member;
use frontend\models\Order;
use yii\helpers\ArrayHelper;
use yii\web\Controller;
use yii\web\Cookie;
use yii\web\Response;
use yii\web\UploadedFile;

class ApiController extends Controller
{
    public $enableCsrfValidation=false;
    public function init()
    {
        \Yii::$app->response->format=Response::FORMAT_JSON;
        parent::init(); // TODO: Change the autogenerated stub
    }
//商品品牌
//    public function actionGoodsByBrand(){
//        if($brand_id=\Yii::$app->request->get('brand_id')){
////            var_dump($brand_id);die;
//            $goods=Goods::find()->where(['brand_id'=>$brand_id])->asArray()->all();
//            return ['status'=>1,'msg'=>'','data'=>$goods];
//        }
//        return ['status'=>'-1','msg'=>'参数不正确'];
//    }
    //会员注册
    //用户注册

    /*注册*/
    /**
     * @return array
     * 调用此接口时候要必须先调用验证码接口 和短信验证码接口
     * 验证码接口：http://www.yiishop.com/api/captcha.html
     * 短信验证码接口：http://www.yiishop.com/api/send-sms.html
     */
    public function actionMemberRegister(){
        $request=\Yii::$app->request;
        if($request->isPost){

            $member=new Member();
            $member->scenario = Member::SCENARIO_API_REGISTER;
            $member->username=$request->post('username');
            $member->password=$request->post('password');
            $member->repassword=$request->post('repassword');
            $member->password_hash=\Yii::$app->security->generatePasswordHash($member->password);
            $member->email=$request->post('email');
            $member->tel=$request->post('tel');
            $member->code=$request->post('code');
            $member->smscode=$request->post('smscode');
            $member->read=1;
            if($member->validate()){
               $member->save(false);
                return ['status'=>1,'msg'=>'注册成功','data'=>$member];
            }

            return ['status'=>-1,'msg'=>'注册失败','data'=>$member->getErrors()];
        }
        return ['status'=>-1,'msg'=>'请求方式有误'];
    }
    //登录
    public function actionMemberLogin(){
        $request=\Yii::$app->request;
        if($request->isPost){
            $member=new LoginForm();
            $member->scenario=LoginForm::SCENARIO_API_LOGIN;
            $member->username=$request->post('username');
            $member->password=$request->post('password');
            $member->code=$request->post('code');
            $member->remember=0;
            if($member->validate()){
                return ['status'=>1,'msg'=>'登录成功','data'=>$member];
            }
            return ['status'=>-1,'msg'=>'登录失败','data'=>$member->getErrors()];
        }
        return ['status'=>-1,'msg'=>'请求方式错误'];
    }
    //注销登录
    public function actionMemberLogout(){
        \Yii::$app->user->logout();
        return ['status'=>1,'msg'=>'注销成功'];
    }
    //修改密码
    public function actionMemberEditPassword(){
        $request=\Yii::$app->request;
        //判断用户是否登录
        if(!\Yii::$app->user->isGuest){
            $member =new EditPassword();
            $member->old_password=$request->post('old_password');
            $member->password=$request->post('password');
            $member->re_password=$request->post('re_password');
            if($member->validate()){
                $user=Member::findOne(['id'=>\Yii::$app->user->id]);
                $user->password_hash=\Yii::$app->security->generatePasswordHash($member->password);
                    $user->save(false);
                return ['status'=>1,'msg'=>'修改密码成功'];
            }
            return ['status'=>-1,'msg'=>'修改失败','data'=>$member->getErrors()];
        }
        return ['status'=>-1,'msg'=>'没有登录请登录'];
    }
    //获取当前登录信息
    public function actionMemberInfo(){
        //判断用户是否登录
        if(!\Yii::$app->user->isGuest){
            $member =Member::findOne(['id'=>\Yii::$app->user->id]);
            return ['status'=>1,'msg'=>'用户登录状态','data'=>$member];
        }
        return ['status'=>-1,'msg'=>'没有登录请登录'];
    }





    //添加地址
    public function actionAddressAdd(){
        //判断用户是否登录
        $request=\Yii::$app->request;
        if(!\Yii::$app->user->isGuest){
            $member_id =\Yii::$app->user->id;
            if($request->isPost){
                $address= new Address();
                $address->member_id=$member_id;
                $address->name=$request->post('name');
                $address->province=$request->post('province');
                $address->city=$request->post('city');
                $address->area=$request->post('area');
                $address->detail=$request->post('detail');
                $address->tel=$request->post('tel');
                if($address->validate()){
                    $address->save();
                    return ['status'=>1,'msg'=>'添加地址成功','data'=>$address];
                }
                return ['status'=>-1,'msg'=>'添加地址失败','data'=>$address->getErrors()];
            }
            return ['status'=>-1,'msg'=>'提交方式错误'];
        }
        return ['status'=>-1,'msg'=>'没有登录请登录'];
    }
    //修改地址
    public function actionAddressEdit(){
        //先查询这条记录
        $request=\Yii::$app->request;
        if($request->isPost){
            $id=$request->post('id');
            $address=Address::findOne(['id'=>$id]);
            $address->name=$request->post('name');
            $address->province=$request->post('province');
            $address->city=$request->post('city');
            $address->area=$request->post('area');
            $address->detail=$request->post('detail');
            $address->tel=$request->post('tel');
            if($address->validate()){
                $address->save();
                return ['status'=>1,'msg'=>'修改地址成功','data'=>$address];
            }
            return ['status'=>-1,'msg'=>'修改地址失败','data'=>$address->getErrors()];
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }
    //删除地址
    public function actionAddressDel(){
        if($id=\Yii::$app->request->get('id')){
            $address=Address::find()->where(['id'=>$id])->one();
            $address->delete();
            return ['status'=>1,'msg'=>'删除成功','data'=>$address];
        }
        return ['status'=>'-1','msg'=>'参数不正确'];

    }
    //地址列表
    public function actionAddressList(){
            //判断用户是否登录
            if(!\Yii::$app->user->isGuest) {
                //获取他的地址列表
                $member_id=\Yii::$app->user->id;
                $address=Address::findAll(['member_id'=>$member_id]);
                return ['status'=>1,'msg'=>'查询成功','data'=>$address];
            }
            return ['status'=>-1,'msg'=>'没有登录请登录'];
    }




    //获取所有商品分类
    public function actionGoodsCateList(){
        $cates=GoodsCategory::find()->all();
        return ['status'=>1,'msg'=>'获取成功','data'=>$cates];
    }
    //获取某分类的所有子分类
    public function actionGetChildCate(){
        if(\Yii::$app->request->isGet) {
            $id = \Yii::$app->request->get('id');
            $cate = GoodsCategory::findOne(['id' => $id]);
            $query = GoodsCategory::find();
            if ($cate->depth == 2) {
                $cates=$query->andWhere(['id' => $id])->all();
            } else {
                $cates=$query->where(['tree'=>$cate->tree])->andWhere('lft>'.$cate->lft)->andWhere('rgt<'.$cate->rgt)->all();

            }
            return ['status' => 1, 'msg' => '获取成功', 'data' => $cates];
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }
    //获取某分类的父分类
    public function actionGetParentCate(){
        if(\Yii::$app->request->isGet){
            $id=\Yii::$app->request->get('id');
            $cate=GoodsCategory::findOne(['id'=>$id]);
            $parent=GoodsCategory::findOne(['id'=>$cate->parent_id]);
            return ['status'=>1,'msg'=>'获取成功','data'=>$parent];
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }




    //获取某分类下面的所有商品
    public function actionGoodsByCate(){
        //查找分类的子分类 同树 左值大于 右值小于
        $request=\Yii::$app->request;
        if($request->isGet){
            $cid=$request->get('id');
            $query=Goods::find();
            $parent=GoodsCategory::findOne(['id'=>$cid]);
            if($parent == null ){
                return ['status'=>-1,'msg'=>'没有此分类'];
            }
            $cates=GoodsCategory::find()->where(['tree'=>$parent->tree])->andWhere('lft>'.$parent->lft)->andWhere('rgt<'.$parent->rgt)->all();
            $cids=[];
            foreach ($cates as $cate){
                $cids[]=$cate->id;
            }
            $query = $query->andWhere(['in','goods_category_id',$cids]);
            //每页显示的条数
            $per_page=\Yii::$app->request->get('per_page',5);
            //当前第几页
            $page=\Yii::$app->request->get('page',1);
            $page=$page<1?1:$page;
            $total=$query->count();
            $goods = $query->offset($per_page*($page-1))->limit($per_page)->asArray()->all();
            return ['status'=>1,'msg'=>'查询成功','data'=>[
                'per_page'=>$per_page,
                'page'=>$page,
                'total'=>$total,
                'goods'=>$goods,]
            ];
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }
    //获取某品牌下面的所有商品
    public function actionGoodsByBrand(){
        if($brand_id=\Yii::$app->request->get('brand_id')){
//            var_dump($brand_id);die;
            $goods=Goods::find()->where(['brand_id'=>$brand_id])->asArray()->all();
            return ['status'=>1,'msg'=>'','data'=>$goods];
        }
        return ['status'=>'-1','msg'=>'参数不正确'];
    }





    //获取文章分类
    public function actionArticleCate(){
        $article=ArticleCategory::find()->all();
        return ['status'=>1,'msg'=>'查询成功','data'=>$article];
    }
    //获取某分类下面的所有文章
    public function actionArticleByCate(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $cate_id=$request->get('cate_id');
            $article=Article::find()->where(['article_category_id'=>$cate_id])->asArray()->all();
            return ['status'=>1,'msg'=>'查询成功','data'=>$article];

        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }
    //获取某文章所属分类
    public function actionCateByArticle(){
        $request=\Yii::$app->request;
        if($request->isGet){
            $article_id=$request->get('article_id');
            $article=Article::findOne(['id'=>$article_id]);
            $cate=ArticleCategory::findOne(['id'=>$article->article_category_id]);
            return ['status'=>1,'msg'=>'查询成功','data'=>$cate];

        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }







    //添加商品到购物车
    public function actionCartAddGoods(){
        //未登录
        $goods_id=\Yii::$app->request->post('goods_id');
        $amount=\Yii::$app->request->post('amount');
        $goods = Goods::findOne(['id'=>$goods_id]);
        if($goods == null){
            return ['status'=>-1,'msg'=>'没有此商品'];
        }
        if(\Yii::$app->user->isGuest){
            //缓存
            //获取response里面的cookie
            $cookies=\Yii::$app->request->cookies;
            $cookie=$cookies->get('cart');
            if($cookie == null){
                $cart=[];
            }else{
                $cart = unserialize($cookie->value);;
            }
            $cookiess=\Yii::$app->response->cookies;
            //如果不存在这个建名就创建
            if(key_exists($goods->id,$cart)){
                $cart[$goods_id] += $amount;
            }else{
                $cart[$goods_id] = $amount;
            }
            $cookie=new Cookie([
                'name'=>'cart',
                'value'=>serialize($cart)
            ]);
           $cookiess->add($cookie);
            return ['status'=>1,'msg'=>'存入cookie成功','data'=>$cart];
        }else{
            //登录
            $model=new Cart();
            $member_id=\Yii::$app->user->id;
            $cart = Cart::find()->where(['member_id' => $member_id])->andWhere(['goods_id'=>$goods_id])->one();
            if(\Yii::$app->request->isPost){
                if($cart){
                    $cart->amount  +=$amount;
                    $cart->save();
                    return ['status'=>1,'msg'=>'累加成功','data'=>$cart];
                }else{
                    $model->goods_id=$goods_id;
                    $model->amount=$amount;
                    $model->member_id=$member_id;
                    $model->save(false);
                    return ['status'=>1,'msg'=>'添加成功','data'=>$model];
                }

            }
            return ['status'=>-1,'msg'=>'提交方式不正确'];
        }
    }
    //修改购物车某商品数量
    public function actionCartEditGoods(){
        //接收goods_id和amount
        $goods_id = \Yii::$app->request->post('goods_id');
        $amount = \Yii::$app->request->post('amount');
        $goods=Goods::findOne(['id'=>$goods_id]);
        if($goods == null){
            return ['status'=>-1,'msg'=>'没有该商品'];
        }
            //未登录
        if(\Yii::$app->user->isGuest){
            //获取response里面的cookie
            $cookies = \Yii::$app->request->cookies;
            $cookie = $cookies->get('cart');
            if ($cookie == null) {
                return ['status'=>-1,'msg'=>'没有该商品'];
            } else {
                $cart = unserialize($cookie->value);;
            }
            $cookiess= \Yii::$app->response->cookies;
            $cart[$goods->id] = $amount;
                $cookie1=new Cookie([
                    'name'=>'cart',
                    'value'=>serialize($cart)
                ]);
                $cookiess->add($cookie1);
            return ['status'=>1,'msg'=>'修改成功','data'=>$cart];

        }else{
            //登录  操作数据表
            $member_id=\Yii::$app->user->id;
            $cart=Cart::findOne(['goods_id'=>$goods_id,'member_id'=>$member_id]);
            $cart->amount=$amount;
            $cart->save();
            return ['status'=>1,'msg'=>'修改成功','data'=>$cart];
        }
    }
    //删除购物车某商品
    public function actionCartDelGoods(){
        //未登录
        if(\Yii::$app->request->isGet){
            $goods_id=\Yii::$app->request->get('goods_id');
            if(\Yii::$app->user->isGuest){
                //获取response里面的cookie
                $cookies=\Yii::$app->request->cookies;
                $cookie=$cookies->get('cart');
                $cart = unserialize($cookie->value);
                unset($cart[$goods_id]);
                return ['status'=>1,'msg'=>'删除成功'];
            }else{
                //登录  操作数据表
                $member_id=\Yii::$app->user->id;
                $cart=Cart::findOne(['goods_id'=>$goods_id,'member_id'=>$member_id]);
                $cart->delete();
                return ['status'=>1,'msg'=>'删除成功'];
            }
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];

    }
    //清空购物车
    public function actionCartCleanGoods(){
        //未登录
        if(\Yii::$app->user->isGuest){
            //清空缓存
            $cookiess=\Yii::$app->response->cookies;
            $cookiess->remove('cart');
            return ['status'=>1,'msg'=>'清除成功'];
        }else{
            $carts=Cart::findAll(['member_id'=>\Yii::$app->user->id]);
            foreach ($carts as $cart){
                $cart->delete();
            }
            return ['status'=>1,'msg'=>'清除成功'];
        }
    }
    //获取购物车所有商品
    public function actionCartAllGoods(){
        //未登录
        if(\Yii::$app->user->isGuest){
            $cookies=\Yii::$app->request->cookies;
            $cookie=$cookies->get('cart');
            if($cookie == null){
                return ['status'=>-1,'msg'=>'购物车里面无商品'];
            }else{
                $cart = unserialize($cookie->value);;
            }
            return ['status'=>1,'msg'=>'获取成功','data'=>$cart];
        }else{
            $cart=Cart::findAll(['member_id'=>\Yii::$app->user->id]);
            return ['status'=>1,'msg'=>'获取成功','data'=>$cart];
        }
    }




    //获取支付方式
    public function actionOrderPayType(){
        $payments=Order::$payments;
        return ['status'=>1,'msg'=>'获取成功','data'=>$payments];
    }
    //获取送货方式
    public function actionOrderDeliveryType(){
        $deliveries=Order::$deliveries;
        return ['status'=>1,'msg'=>'获取送货方式成功','date'=>$deliveries];
    }
    //提交订单
    public function actionOrderSubmit(){
        //判断登录
        if(!\Yii::$app->user->isGuest){
            if(\Yii::$app->request->isPost){
                $order=new Order();
                $order->member_id=\Yii::$app->user->id;
                $address_id= \Yii::$app->request->post('address_id');
                $address = Address::findOne(['id'=>$address_id,'member_id'=>\Yii::$app->user->id]);
                $order->name=$address->name;
                $order->province=$address->province;
                $order->city=$address->city;
                $order->area=$address->area;
                $order->address=$address->detail;
                $order->tel=$address->tel;
                if($order->validate()){
                    $delivery_id=\Yii::$app->request->post('delivery_id');
                    $order->delivery_id=Order::$deliveries[$delivery_id-1]['id'];
                    $order->delivery_name=Order::$deliveries[$delivery_id-1]['delivery_name'];
                    $order->delivery_price=Order::$deliveries[$delivery_id-1]['delivery_price'];
                    $payment_id=\Yii::$app->request->post('payment_id');
                    $order->payment_id=Order::$payments[$payment_id-1]['id'];
                    $order->payment_name=Order::$payments[$payment_id-1]['payment_name'];
                }
                $order->total=\Yii::$app->request->post('total');
                $order->create_time=time();
                $order->status = 1;
                $order->save();
                return ['status'=>1,'msg'=>'提交订单成功','data'=>$order];
            }
        }
        return ['status'=>-1,'msg'=>'未登录请登录'];
    }
    //获取当前用户订单列表
    public function actionGetOrderList(){
        if(\Yii::$app->user->isGuest){
            return ['status'=>-1,'msg'=>'未登录请登录'];
        }
        $member_id=\Yii::$app->user->id;
        $order=Order::findAll(['member_id'=>$member_id]);
        return ['status'=>1,'msg'=>'获取列表成功','data'=>$order];
    }
    //取消订单
    public function actionCancelOrder(){
        if(\Yii::$app->request->isGet){
            $id=\Yii::$app->request->get('id');
            $order=Order::findOne(['id'=>$id]);
            $order->status=0;
            $order->save();
            return ['status'=>1,'msg'=>'取消订单成功'];
        }
        return ['status'=>-1,'msg'=>'提交方式错误'];
    }







    //验证码
    public function actions()
    {
        return [
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,
                'minLength'=>4,
                'maxLength'=>4,
            ],
        ];
    }
    //手机验证码
    public function actionSendSms()
    {
        //确保上一次发送短信间隔超过1分钟
        $tel = \Yii::$app->request->post('tel');
        if(!preg_match('/^1[34578]\d{9}$/',$tel)){
            return ['status'=>'-1','msg'=>'电话号码不正确'];
        }
        //检查上次发送时间是否超过1分钟
        $value = \Yii::$app->cache->get('time_tel_'.$tel);
        $s = time()-$value;
        if($s <60){
            return ['status'=>'-1','msg'=>'请'.(60-$s).'秒后再试'];
        }

        $code = rand(100000,999999);
        //$result = \Yii::$app->sms->setNum($tel)->setParam(['code' => $code])->send();
        $result = 1;
        if($result){
            \Yii::$app->cache->set('tel_'.$tel,$code,5*60);
            \Yii::$app->cache->set('time_tel_'.$tel,time(),5*60);
            return ['status'=>'1','msg'=>'','data'=>$code];
        }else{
            return ['status'=>'-1','msg'=>'短信发送失败'];
        }
    }
    //上传图片
    public function actionUploadFile(){
        $img=UploadedFile::getInstanceByName('img');
        if($img ==null){
            return ['status'=>-1,'msg'=>'没有选择文件'];
        }
        $fileName='/upload/'.uniqid().'.'.$img->extension;
        $res = $img->saveAs(\Yii::getAlias('@webroot').$fileName,false);
        if($res){
            return ['status'=>1,'msg'=>'上传文件成功'];
        }
        return ['status'=>1,'msg'=>'上传文件失败','data'=>$img->error];
    }
}